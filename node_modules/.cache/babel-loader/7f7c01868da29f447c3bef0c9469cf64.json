{"ast":null,"code":"var _jsxFileName = \"/Users/emmanuelogbewe/coding/web_apps/porfolio_version_one/src/components/projects/Projects.js\";\nimport React, { useState } from 'react';\nimport LargeProjectContainer from './LargeContainer.js';\nimport Button from '../../common/button/Button';\nimport './css/Projects.css';\nimport Description from './Description.js';\nexport default function Projects() {\n  const data = [{\n    title: 'NxtGame',\n    year: '2017',\n    descript: 'Revolutionary sports app connecting people to local pick up games near them.',\n    languages: 'Flutter',\n    image: require('../../assets/project_nxtgame@3x.png'),\n    imageBackgroundColor: 'black',\n    url: '',\n    imageDirection: 'left'\n  }, {\n    title: 'NxtGame Landing Page',\n    year: '2019',\n    descript: 'Beautifully sleek landing page for the NxtGame app. Sign up for the beta today!',\n    languages: 'Next/Mailchimp',\n    image: require('../../assets/nxtgame_landing_page.png'),\n    imageBackgroundColor: '#626262',\n    marginTop: '5em',\n    url: '',\n    imageDirection: ''\n  }];\n  const smallProjectsData = [{\n    title: 'CAMR1',\n    year: '2019',\n    descript: 'CAMR1 is an IOS mobile application that recognizes dominant objects with the phone\\'s camera using machine learning.',\n    languages: 'See Project',\n    url: 'https://github.com/EmmanuelOgbewe/CAMR1'\n  }, {\n    title: 'Neural Network',\n    year: '2019',\n    descript: 'Two layer neural network built in python. Takes in input data and determines a optimal output.',\n    languages: 'See Project',\n    url: 'https://github.com/EmmanuelOgbewe/NeuralNet'\n  }, {\n    title: 'CAMR1',\n    year: '2019',\n    descript: 'CAMR1 is an IOS mobile application that recognizes dominant objects with the phone\\'s camera using machine learning.',\n    languages: 'See Project',\n    url: 'https://github.com/EmmanuelOgbewe/CAMR1'\n  }, {\n    title: 'Neural Network',\n    year: '2019',\n    descript: 'Two layer neural network built in python. Takes in input data and determines a optimal output.',\n    languages: 'See Project',\n    url: 'https://github.com/EmmanuelOgbewe/NeuralNet'\n  }];\n  const [currentlyShowing, updateCurrentlyShowing] = useState([smallProjectsData[0], smallProjectsData[1]]);\n\n  function addToShowing(data) {\n    var newArr = currentlyShowing;\n\n    if (data.length > currentlyShowing.length) {\n      const offset = data.length - currentlyShowing.length >= 2 ? 2 : 1;\n      newArr = currentlyShowing.concat(smallProjectsData.slice(currentlyShowing.length, currentlyShowing.length + offset));\n    }\n\n    return newArr;\n  }\n\n  const listItems = data.map(project => React.createElement(LargeProjectContainer, {\n    image: project.image,\n    imageBackgroundColor: project.imageBackgroundColor,\n    imageDirection: project.imageDirection,\n    marginTop: project.marginTop,\n    url: project.url,\n    title: project.title,\n    year: project.year,\n    descript: project.descript,\n    languages: project.languages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }));\n\n  function createSmallProjectsItem(data) {\n    console.log(data);\n    return data.map(project => React.createElement(Description, {\n      alignItems: \"left\",\n      margin: \"0px 0px 4em 0px\",\n      padding: \"0em 0 0 6.2em\",\n      labelWidth: \"70%\",\n      descriptWidth: \"80%\",\n      descriptHeight: \"30%\",\n      title: project.title,\n      year: project.year,\n      descript: project.descript,\n      languages: project.languages,\n      url: project.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }));\n  } // const smallItems = currentlyShowing.map((project) => (\n  //     <Description \n  //         alignItems={\"left\"}\n  //         margin={\"0px 0px 4em 0px\"}\n  //         padding={\"0em 0 0 6.2em\"}\n  //         labelWidth={\"70%\"}\n  //         descriptWidth={\"80%\"}\n  //         descriptHeight={\"30%\"}\n  //         title={project.title}\n  //         year={project.year}\n  //         descript={project.descript}\n  //         languages={project.languages}\n  //         url={project.url}\n  //     />\n  // ))\n\n\n  const showButton = smallProjectsData.length > 2 ? React.createElement(Button, {\n    height: '2.4em',\n    width: \"11em\",\n    fontSize: '1.2em',\n    textColor: 'black',\n    marginTop: '4em',\n    borderWidth: 1,\n    borderColor: 'black',\n    buttonText: 'VIEW MORE',\n    backgroundColor: 'transparent',\n    fontWeight: 600,\n    onTap: () => updateCurrentlyShowing(addToShowing(smallProjectsData)),\n    padding: '1em 2em',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }) : null;\n  return React.createElement(\"div\", {\n    className: \"projects-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, listItems, React.createElement(\"div\", {\n    id: \"minor-projects-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, createSmallProjectsItem(currentlyShowing)), showButton);\n}","map":{"version":3,"sources":["/Users/emmanuelogbewe/coding/web_apps/porfolio_version_one/src/components/projects/Projects.js"],"names":["React","useState","LargeProjectContainer","Button","Description","Projects","data","title","year","descript","languages","image","require","imageBackgroundColor","url","imageDirection","marginTop","smallProjectsData","currentlyShowing","updateCurrentlyShowing","addToShowing","newArr","length","offset","concat","slice","listItems","map","project","createSmallProjectsItem","console","log","showButton"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,qBAAP,MAAkC,qBAAlC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAE/B,QAAMC,IAAI,GAAG,CACT;AACIC,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,IAAI,EAAE,MAFV;AAGIC,IAAAA,QAAQ,EAAE,8EAHd;AAIIC,IAAAA,SAAS,EAAE,SAJf;AAKIC,IAAAA,KAAK,EAAEC,OAAO,CAAC,qCAAD,CALlB;AAMIC,IAAAA,oBAAoB,EAAE,OAN1B;AAOIC,IAAAA,GAAG,EAAE,EAPT;AAQIC,IAAAA,cAAc,EAAE;AARpB,GADS,EAWT;AACIR,IAAAA,KAAK,EAAE,sBADX;AAEIC,IAAAA,IAAI,EAAE,MAFV;AAGIC,IAAAA,QAAQ,EAAE,iFAHd;AAIIC,IAAAA,SAAS,EAAE,gBAJf;AAKIC,IAAAA,KAAK,EAAEC,OAAO,CAAC,uCAAD,CALlB;AAMIC,IAAAA,oBAAoB,EAAE,SAN1B;AAOIG,IAAAA,SAAS,EAAE,KAPf;AAQIF,IAAAA,GAAG,EAAE,EART;AASIC,IAAAA,cAAc,EAAE;AATpB,GAXS,CAAb;AAuBA,QAAME,iBAAiB,GAAG,CACtB;AACIV,IAAAA,KAAK,EAAE,OADX;AAEIC,IAAAA,IAAI,EAAE,MAFV;AAGIC,IAAAA,QAAQ,EAAE,sHAHd;AAIIC,IAAAA,SAAS,EAAE,aAJf;AAKII,IAAAA,GAAG,EAAE;AALT,GADsB,EAQtB;AACIP,IAAAA,KAAK,EAAE,gBADX;AAEIC,IAAAA,IAAI,EAAE,MAFV;AAGIC,IAAAA,QAAQ,EAAE,gGAHd;AAIIC,IAAAA,SAAS,EAAE,aAJf;AAMII,IAAAA,GAAG,EAAE;AANT,GARsB,EAgBtB;AACIP,IAAAA,KAAK,EAAE,OADX;AAEIC,IAAAA,IAAI,EAAE,MAFV;AAGIC,IAAAA,QAAQ,EAAE,sHAHd;AAIIC,IAAAA,SAAS,EAAE,aAJf;AAKII,IAAAA,GAAG,EAAE;AALT,GAhBsB,EAuBtB;AACIP,IAAAA,KAAK,EAAE,gBADX;AAEIC,IAAAA,IAAI,EAAE,MAFV;AAGIC,IAAAA,QAAQ,EAAE,gGAHd;AAIIC,IAAAA,SAAS,EAAE,aAJf;AAMII,IAAAA,GAAG,EAAE;AANT,GAvBsB,CAA1B;AAmCA,QAAM,CAACI,gBAAD,EAAmBC,sBAAnB,IAA6ClB,QAAQ,CAAC,CAACgB,iBAAiB,CAAC,CAAD,CAAlB,EAAsBA,iBAAiB,CAAC,CAAD,CAAvC,CAAD,CAA3D;;AAEA,WAASG,YAAT,CAAsBd,IAAtB,EAA4B;AAExB,QAAIe,MAAM,GAAGH,gBAAb;;AAEA,QAAIZ,IAAI,CAACgB,MAAL,GAAcJ,gBAAgB,CAACI,MAAnC,EAA2C;AACvC,YAAMC,MAAM,GAAGjB,IAAI,CAACgB,MAAL,GAAcJ,gBAAgB,CAACI,MAA/B,IAAyC,CAAzC,GAA6C,CAA7C,GAAiD,CAAhE;AACAD,MAAAA,MAAM,GAAGH,gBAAgB,CAACM,MAAjB,CAAwBP,iBAAiB,CAACQ,KAAlB,CAAyBP,gBAAgB,CAACI,MAA1C,EAAmDJ,gBAAgB,CAACI,MAAjB,GAA0BC,MAA7E,CAAxB,CAAT;AACH;;AACD,WAAOF,MAAP;AACH;;AAED,QAAMK,SAAS,GAAGpB,IAAI,CAACqB,GAAL,CAAUC,OAAD,IACvB,oBAAC,qBAAD;AACI,IAAA,KAAK,EAAEA,OAAO,CAACjB,KADnB;AAEI,IAAA,oBAAoB,EAAEiB,OAAO,CAACf,oBAFlC;AAGI,IAAA,cAAc,EAAEe,OAAO,CAACb,cAH5B;AAII,IAAA,SAAS,EAAEa,OAAO,CAACZ,SAJvB;AAKI,IAAA,GAAG,EAAEY,OAAO,CAACd,GALjB;AAMI,IAAA,KAAK,EAAEc,OAAO,CAACrB,KANnB;AAOI,IAAA,IAAI,EAAEqB,OAAO,CAACpB,IAPlB;AAQI,IAAA,QAAQ,EAAEoB,OAAO,CAACnB,QARtB;AASI,IAAA,SAAS,EAAEmB,OAAO,CAAClB,SATvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,CAAlB;;AAcA,WAASmB,uBAAT,CAAiCvB,IAAjC,EAAsC;AAClCwB,IAAAA,OAAO,CAACC,GAAR,CAAYzB,IAAZ;AACA,WAAOA,IAAI,CAACqB,GAAL,CAAUC,OAAD,IACZ,oBAAC,WAAD;AACI,MAAA,UAAU,EAAE,MADhB;AAEI,MAAA,MAAM,EAAE,iBAFZ;AAGI,MAAA,OAAO,EAAE,eAHb;AAII,MAAA,UAAU,EAAE,KAJhB;AAKI,MAAA,aAAa,EAAE,KALnB;AAMI,MAAA,cAAc,EAAE,KANpB;AAOI,MAAA,KAAK,EAAEA,OAAO,CAACrB,KAPnB;AAQI,MAAA,IAAI,EAAEqB,OAAO,CAACpB,IARlB;AASI,MAAA,QAAQ,EAAEoB,OAAO,CAACnB,QATtB;AAUI,MAAA,SAAS,EAAEmB,OAAO,CAAClB,SAVvB;AAWI,MAAA,GAAG,EAAEkB,OAAO,CAACd,GAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,CAAP;AAeH,GAxG8B,CA0G/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMkB,UAAU,GAAGf,iBAAiB,CAACK,MAAlB,GAA2B,CAA3B,GACnB,oBAAC,MAAD;AACI,IAAA,MAAM,EAAE,OADZ;AAEI,IAAA,KAAK,EAAE,MAFX;AAGI,IAAA,QAAQ,EAAE,OAHd;AAII,IAAA,SAAS,EAAE,OAJf;AAKI,IAAA,SAAS,EAAE,KALf;AAMI,IAAA,WAAW,EAAE,CANjB;AAOI,IAAA,WAAW,EAAE,OAPjB;AAQI,IAAA,UAAU,EAAE,WARhB;AASI,IAAA,eAAe,EAAE,aATrB;AAUI,IAAA,UAAU,EAAE,GAVhB;AAWI,IAAA,KAAK,EAAE,MAAMH,sBAAsB,CAACC,YAAY,CAACH,iBAAD,CAAb,CAXvC;AAYI,IAAA,OAAO,EAAE,SAZb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADmB,GAcd,IAdL;AAiBA,SACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKS,SADL,EAEI;AAAK,IAAA,EAAE,EAAC,wBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCG,uBAAuB,CAACX,gBAAD,CAAzD,CAFJ,EAGKc,UAHL,CADJ;AAQH","sourcesContent":["import React, {useState} from 'react'\nimport LargeProjectContainer from './LargeContainer.js'\nimport Button from '../../common/button/Button'\nimport './css/Projects.css'\nimport Description from './Description.js'\n\nexport default function Projects() {\n\n    const data = [\n        {\n            title: 'NxtGame',\n            year: '2017',\n            descript: 'Revolutionary sports app connecting people to local pick up games near them.',\n            languages: 'Flutter',\n            image: require('../../assets/project_nxtgame@3x.png'),\n            imageBackgroundColor: 'black',\n            url: '',\n            imageDirection: 'left'\n        },\n        {\n            title: 'NxtGame Landing Page',\n            year: '2019',\n            descript: 'Beautifully sleek landing page for the NxtGame app. Sign up for the beta today!',\n            languages: 'Next/Mailchimp',\n            image: require('../../assets/nxtgame_landing_page.png'),\n            imageBackgroundColor: '#626262',\n            marginTop: '5em',\n            url: '',\n            imageDirection: ''\n        }\n    ]\n    const smallProjectsData = [\n        {\n            title: 'CAMR1',\n            year: '2019',\n            descript: 'CAMR1 is an IOS mobile application that recognizes dominant objects with the phone\\'s camera using machine learning.',\n            languages: 'See Project',\n            url: 'https://github.com/EmmanuelOgbewe/CAMR1',\n        },\n        {\n            title: 'Neural Network',\n            year: '2019',\n            descript: 'Two layer neural network built in python. Takes in input data and determines a optimal output.',\n            languages: 'See Project',\n            \n            url: 'https://github.com/EmmanuelOgbewe/NeuralNet',\n        },\n        {\n            title: 'CAMR1',\n            year: '2019',\n            descript: 'CAMR1 is an IOS mobile application that recognizes dominant objects with the phone\\'s camera using machine learning.',\n            languages: 'See Project',\n            url: 'https://github.com/EmmanuelOgbewe/CAMR1',\n        },\n        {\n            title: 'Neural Network',\n            year: '2019',\n            descript: 'Two layer neural network built in python. Takes in input data and determines a optimal output.',\n            languages: 'See Project',\n            \n            url: 'https://github.com/EmmanuelOgbewe/NeuralNet',\n        },\n        \n        \n    ]\n\n    const [currentlyShowing, updateCurrentlyShowing] = useState([smallProjectsData[0],smallProjectsData[1]]) \n\n    function addToShowing(data) {\n     \n        var newArr = currentlyShowing\n\n        if (data.length > currentlyShowing.length) {\n            const offset = data.length - currentlyShowing.length >= 2 ? 2 : 1\n            newArr = currentlyShowing.concat(smallProjectsData.slice((currentlyShowing.length), currentlyShowing.length + offset))\n        }\n        return newArr\n    }\n\n    const listItems = data.map((project) => (\n        <LargeProjectContainer\n            image={project.image}\n            imageBackgroundColor={project.imageBackgroundColor}\n            imageDirection={project.imageDirection}\n            marginTop={project.marginTop}\n            url={project.url}\n            title={project.title}\n            year={project.year}\n            descript={project.descript}\n            languages={project.languages}\n        />\n    ))\n\n    function createSmallProjectsItem(data){\n        console.log(data)\n        return data.map((project) => (\n            <Description \n                alignItems={\"left\"}\n                margin={\"0px 0px 4em 0px\"}\n                padding={\"0em 0 0 6.2em\"}\n                labelWidth={\"70%\"}\n                descriptWidth={\"80%\"}\n                descriptHeight={\"30%\"}\n                title={project.title}\n                year={project.year}\n                descript={project.descript}\n                languages={project.languages}\n                url={project.url}\n            />\n        ))\n    }\n    \n    // const smallItems = currentlyShowing.map((project) => (\n    //     <Description \n    //         alignItems={\"left\"}\n    //         margin={\"0px 0px 4em 0px\"}\n    //         padding={\"0em 0 0 6.2em\"}\n    //         labelWidth={\"70%\"}\n    //         descriptWidth={\"80%\"}\n    //         descriptHeight={\"30%\"}\n    //         title={project.title}\n    //         year={project.year}\n    //         descript={project.descript}\n    //         languages={project.languages}\n    //         url={project.url}\n    //     />\n    // ))\n\n    const showButton = smallProjectsData.length > 2 ? \n    <Button\n        height={'2.4em'}\n        width={\"11em\"}\n        fontSize={'1.2em'}\n        textColor={'black'}\n        marginTop={'4em'}\n        borderWidth={1}\n        borderColor={'black'}\n        buttonText={'VIEW MORE'}\n        backgroundColor={'transparent'}\n        fontWeight={600}\n        onTap={() => updateCurrentlyShowing(addToShowing(smallProjectsData))}\n        padding={'1em 2em'}\n    /> : null\n\n\n    return (\n        <div className=\"projects-wrapper\">\n            {listItems}\n            <div id=\"minor-projects-wrapper\">{createSmallProjectsItem(currentlyShowing)}</div>\n            {showButton}\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}